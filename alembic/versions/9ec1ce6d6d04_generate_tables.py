"""Generate tables

Revision ID: 9ec1ce6d6d04
Revises: 
Create Date: 2025-05-13 23:53:12.123966

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '9ec1ce6d6d04'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('role', sa.Enum('admin', 'subAdmin', 'teacher', 'student', 'staff', 'parent', name='role'), nullable=True),
    sa.Column('firstname', sa.String(), nullable=True),
    sa.Column('lastname', sa.String(), nullable=True),
    sa.Column('phone_number', sa.String(), nullable=True),
    sa.Column('address', sa.String(), nullable=True),
    sa.Column('status', sa.Enum('active', 'inactive', 'suspended', name='userstatus'), nullable=True),
    sa.Column('notification_preference', sa.Enum('email', 'sms', 'in_app', 'all', name='notificationpreference'), nullable=True),
    sa.Column('created_at', sa.String(), nullable=True),
    sa.Column('updated_at', sa.String(), nullable=True),
    sa.Column('type', sa.String(length=50), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('centers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('address', sa.String(), nullable=True),
    sa.Column('status', sa.Enum('active', 'inactive', 'under_maintenance', name='centerstatus'), nullable=True),
    sa.Column('manager_id', sa.Integer(), nullable=True),
    sa.Column('phone', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('capacity', sa.Integer(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['manager_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_centers_id'), 'centers', ['id'], unique=False)
    op.create_table('parents',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('occupation', sa.String(), nullable=True),
    sa.Column('relationship_to_student', sa.String(), nullable=True),
    sa.Column('emergency_contact', sa.String(), nullable=True),
    sa.Column('preferred_contact_time', sa.String(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('mosques',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('address', sa.String(), nullable=True),
    sa.Column('center_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['center_id'], ['centers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_mosques_id'), 'mosques', ['id'], unique=False)
    op.create_index(op.f('ix_mosques_name'), 'mosques', ['name'], unique=False)
    op.create_table('students',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('level', sa.String(), nullable=True),
    sa.Column('exemption_status', sa.Enum('exempted', 'non_exempted', 'partial', name='exemptionstatus'), nullable=True),
    sa.Column('center_id', sa.Integer(), nullable=True),
    sa.Column('birth_date', sa.Date(), nullable=True),
    sa.Column('gender', sa.Enum('male', 'female', name='gender'), nullable=True),
    sa.Column('nationality', sa.String(), nullable=True),
    sa.Column('id_number', sa.String(), nullable=True),
    sa.Column('parent_name', sa.String(), nullable=True),
    sa.Column('parent_phone', sa.String(), nullable=True),
    sa.Column('emergency_contact', sa.String(), nullable=True),
    sa.Column('medical_conditions', sa.Text(), nullable=True),
    sa.Column('registration_date', sa.Date(), nullable=True),
    sa.Column('previous_education', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['center_id'], ['centers.id'], ),
    sa.ForeignKeyConstraint(['id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('teachers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('qualifications', sa.Text(), nullable=True),
    sa.Column('center_id', sa.Integer(), nullable=True),
    sa.Column('specialization', sa.String(), nullable=True),
    sa.Column('years_of_experience', sa.Integer(), nullable=True),
    sa.Column('certifications', sa.Text(), nullable=True),
    sa.Column('availability', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['center_id'], ['centers.id'], ),
    sa.ForeignKeyConstraint(['id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('student_mosque',
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('mosque_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['mosque_id'], ['mosques.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['students.id'], ),
    sa.PrimaryKeyConstraint('student_id', 'mosque_id')
    )
    op.create_table('student_parents',
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('parent_id', sa.Integer(), nullable=False),
    sa.Column('relationship_type', sa.String(), nullable=True),
    sa.Column('is_primary_contact', sa.String(), nullable=True),
    sa.Column('created_at', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['parents.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['students.id'], ),
    sa.PrimaryKeyConstraint('student_id', 'parent_id')
    )
    op.create_table('study_circles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('type', sa.Enum('individual', 'group', name='circletype'), nullable=True),
    sa.Column('teacher_id', sa.Integer(), nullable=True),
    sa.Column('mosque_id', sa.Integer(), nullable=True),
    sa.Column('max_capacity', sa.Integer(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('start_date', sa.Date(), nullable=True),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('status', sa.Enum('active', 'inactive', 'completed', 'cancelled', name='circlestatus'), nullable=True),
    sa.Column('created_at', sa.String(), nullable=True),
    sa.Column('updated_at', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['mosque_id'], ['mosques.id'], ),
    sa.ForeignKeyConstraint(['teacher_id'], ['teachers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_study_circles_id'), 'study_circles', ['id'], unique=False)
    op.create_table('teacher_mosque',
    sa.Column('teacher_id', sa.Integer(), nullable=False),
    sa.Column('mosque_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['mosque_id'], ['mosques.id'], ),
    sa.ForeignKeyConstraint(['teacher_id'], ['teachers.id'], ),
    sa.PrimaryKeyConstraint('teacher_id', 'mosque_id')
    )
    op.create_table('attendances',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=True),
    sa.Column('teacher_id', sa.Integer(), nullable=True),
    sa.Column('circle_id', sa.Integer(), nullable=True),
    sa.Column('mosque_id', sa.Integer(), nullable=True),
    sa.Column('date', sa.Date(), nullable=True),
    sa.Column('status', sa.Enum('present', 'absent', 'late', 'excused', name='attendancestatus'), nullable=True),
    sa.Column('notes', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['circle_id'], ['study_circles.id'], ),
    sa.ForeignKeyConstraint(['mosque_id'], ['mosques.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['students.id'], ),
    sa.ForeignKeyConstraint(['teacher_id'], ['teachers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_attendances_id'), 'attendances', ['id'], unique=False)
    op.create_table('circle_students',
    sa.Column('circle_id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('join_date', sa.Date(), nullable=True),
    sa.Column('status', sa.Enum('active', 'inactive', 'graduated', name='circlestudentstatus'), nullable=True),
    sa.Column('notes', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['circle_id'], ['study_circles.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['students.id'], ),
    sa.PrimaryKeyConstraint('circle_id', 'student_id'),
    sa.UniqueConstraint('circle_id', 'student_id', name='uq_circle_student')
    )
    op.create_index(op.f('ix_circle_students_circle_id'), 'circle_students', ['circle_id'], unique=False)
    op.create_index(op.f('ix_circle_students_student_id'), 'circle_students', ['student_id'], unique=False)
    op.create_table('schedules',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('circle_id', sa.Integer(), nullable=True),
    sa.Column('day_of_week', sa.Enum('monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday', 'sunday', name='dayofweek'), nullable=True),
    sa.Column('start_time', sa.Time(), nullable=False),
    sa.Column('end_time', sa.Time(), nullable=False),
    sa.Column('location', sa.String(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.String(), nullable=True),
    sa.Column('updated_at', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['circle_id'], ['study_circles.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_schedules_id'), 'schedules', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_schedules_id'), table_name='schedules')
    op.drop_table('schedules')
    op.drop_index(op.f('ix_circle_students_student_id'), table_name='circle_students')
    op.drop_index(op.f('ix_circle_students_circle_id'), table_name='circle_students')
    op.drop_table('circle_students')
    op.drop_index(op.f('ix_attendances_id'), table_name='attendances')
    op.drop_table('attendances')
    op.drop_table('teacher_mosque')
    op.drop_index(op.f('ix_study_circles_id'), table_name='study_circles')
    op.drop_table('study_circles')
    op.drop_table('student_parents')
    op.drop_table('student_mosque')
    op.drop_table('teachers')
    op.drop_table('students')
    op.drop_index(op.f('ix_mosques_name'), table_name='mosques')
    op.drop_index(op.f('ix_mosques_id'), table_name='mosques')
    op.drop_table('mosques')
    op.drop_table('parents')
    op.drop_index(op.f('ix_centers_id'), table_name='centers')
    op.drop_table('centers')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
