"""Updated tables

Revision ID: 3437fac4069e
Revises: 28aa941174fc
Create Date: 2025-05-12 21:48:48.928379

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '3437fac4069e'
down_revision: Union[str, None] = '28aa941174fc'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('mosques',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('address', sa.String(), nullable=True),
    sa.Column('center_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['center_id'], ['centers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_mosques_id'), 'mosques', ['id'], unique=False)
    op.create_index(op.f('ix_mosques_name'), 'mosques', ['name'], unique=False)
    op.create_table('teacher_mosque',
    sa.Column('teacher_id', sa.Integer(), nullable=False),
    sa.Column('mosque_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['mosque_id'], ['mosques.id'], ),
    sa.ForeignKeyConstraint(['teacher_id'], ['teachers.id'], ),
    sa.PrimaryKeyConstraint('teacher_id', 'mosque_id')
    )
    op.create_table('student_mosque',
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('mosque_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['mosque_id'], ['mosques.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['students.id'], ),
    sa.PrimaryKeyConstraint('student_id', 'mosque_id')
    )
    op.alter_column('circle_students', 'circle_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('circle_students', 'student_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    
    op.create_index(op.f('ix_circle_students_circle_id'), 'circle_students', ['circle_id'], unique=False)
    op.create_index(op.f('ix_circle_students_student_id'), 'circle_students', ['student_id'], unique=False)
    op.create_unique_constraint('uq_circle_student', 'circle_students', ['circle_id', 'student_id'])
    op.add_column('study_circles', sa.Column('mosque_id', sa.Integer(), nullable=True))
    op.drop_constraint('study_circles_center_id_fkey', 'study_circles', type_='foreignkey')
    op.create_foreign_key(None, 'study_circles', 'mosques', ['mosque_id'], ['id'])
    op.drop_column('study_circles', 'center_id')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('study_circles', sa.Column('center_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'study_circles', type_='foreignkey')
    op.create_foreign_key('study_circles_center_id_fkey', 'study_circles', 'centers', ['center_id'], ['id'])
    op.drop_column('study_circles', 'mosque_id')
    op.drop_constraint('uq_circle_student', 'circle_students', type_='unique')
    op.drop_index(op.f('ix_circle_students_student_id'), table_name='circle_students')
    op.drop_index(op.f('ix_circle_students_circle_id'), table_name='circle_students')
    op.alter_column('circle_students', 'status',
               existing_type=sa.Enum('active', 'inactive', 'graduated', name='circlestudentstatus'),
               type_=sa.VARCHAR(),
               existing_nullable=True)
    op.alter_column('circle_students', 'student_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('circle_students', 'circle_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_table('student_mosque')
    op.drop_table('teacher_mosque')
    op.drop_index(op.f('ix_mosques_name'), table_name='mosques')
    op.drop_index(op.f('ix_mosques_id'), table_name='mosques')
    op.drop_table('mosques')
    # ### end Alembic commands ###
