"""Updated tables

Revision ID: ebd7eec4d831
Revises: 079ce79e8a11
Create Date: 2025-05-01 12:13:01.766468

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'ebd7eec4d831'
down_revision: Union[str, None] = '079ce79e8a11'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_tests_id', table_name='tests')
    op.drop_table('tests')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('tests',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('student_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('examiner_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('test_date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('test_type', postgresql.ENUM('written', 'oral', 'practical', 'comprehensive', name='testtype'), autoincrement=False, nullable=True),
    sa.Column('status', postgresql.ENUM('scheduled', 'completed', 'cancelled', 'pending', name='teststatus'), autoincrement=False, nullable=True),
    sa.Column('score', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('max_score', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('subject', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('notes', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('updated_at', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['examiner_id'], ['users.id'], name='tests_examiner_id_fkey'),
    sa.ForeignKeyConstraint(['student_id'], ['students.id'], name='tests_student_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='tests_pkey')
    )
    op.create_index('ix_tests_id', 'tests', ['id'], unique=False)
    # ### end Alembic commands ###
